# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Test and build

on:
    push:
        branches: ['main']
    pull_request:
        branches: ['main']

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18.x
                  cache: 'yarn'
            - name: Install packages
              run: yarn
            - name: Run ESLint check
              run: yarn eslint .
            - name: Run Prettier check
              run: yarn prettier . --check
            - name: Build project
              run: yarn build
            - name: Upload GitHub Pages artifact
              uses: actions/upload-pages-artifact@v3.0.1
              with:
                  path: './dist'

    deploy:
        needs: build

        permissions:
            pages: write
            id-token: write

        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}

        runs-on: ubuntu-latest
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4

    publish:
        needs: build

        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - uses: docker/login-action@v2
              name: Log in to the container registry
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - uses: docker/build-push-action@v4
              name: Build and push the Docker image
              with:
                  context: .
                  push: true
                  tags: ${{ github.repository }}/portfolio:latest
